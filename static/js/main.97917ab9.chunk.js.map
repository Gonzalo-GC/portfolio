{"version":3,"sources":["images/about_image.jpg","components/Navbar.js","components/Header.js","components/About.js","components/Projects.js","components/Contact.js","App.js","components/ButtonLink.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","styled","header","Component","description","data","main","socialList","social","skillsList","skills","about_1","about_2","About","this","props","map","s","className","title","name_1","name_2","name_3","id","src","Foto","alt","class","Projects","App","resumeData","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,yC,s+FCK3C,IAAMC,E,MAAaC,EAAOC,OAAV,K,GAyIKC,Y,MC1IfC,EAAcC,EAAKC,KAAKF,YACxBG,EAAaF,EAAKC,KAAKE,O,GACZH,EAAKC,KAEDH,Y,gBCJfM,EAAaJ,EAAKK,OAClBC,EAAUN,EAAKM,QACfC,EAAUP,EAAKO,QAGfR,EAAcC,EAAKC,KAAKF,YAqEfS,E,uKAhEX,GAAIC,KAAKC,MAAMV,KACb,IAAIK,EAASD,EAAWO,KAAI,SAAAC,GAC1B,OAAO,yBAAKC,UAAU,iBACpB,4BAAKD,EAAEE,OACP,2BAAIF,EAAEG,QACN,2BAAIH,EAAEI,QACN,2BAAIJ,EAAEK,YAaZ,OACE,6BAASC,GAAG,SAGV,yBAAKL,UAAU,iBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,SAAd,YACA,yBAAKA,UAAU,qBACb,2BAAIP,GACJ,2BAAIC,KAIR,yBAAKM,UAAU,mBACb,yBAAKA,UAAU,aAAaM,IAAKC,IAAMC,IAAI,sBAI/C,yBAAKR,UAAU,kBACb,+CACA,4BAAKd,GACL,yBAAKuB,MAAM,OACT,yBAAKT,UAAU,gBACdR,EACD,4C,GA/CMP,aCMLyB,GCdOzB,Y,uKDCd,OACI,6BAASoB,GAAG,YACR,yBAAKL,UAAU,oBACX,wCACA,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,WAAf,sB,GAPDf,cEwER0B,GCvEU1B,YDQL2B,EAAWxB,KAAKF,Y,uKAoChC,OACE,yBAAKc,UAAU,OAGb,kBAAC,EAAD,MACA,kBAAC,EAAD,MASA,yBAAKA,UAAU,UACb,0CACA,uBAAGa,KAAK,+DACJC,OAAO,SACPC,IAAI,uBAFR,c,GAlDQ9B,cEDE+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.97917ab9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about_image.5e277109.jpg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Navigation = styled.header`\r\n    /*font-family: 'Oswald', sans-serif;*/\r\n    overflow: hidden;\r\n    position: absolute;\r\n    right: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n \r\n    .menu-mobile {\r\n        display: none;\r\n    }\r\n\r\n    .nav-items {\r\n        overflow: hidden;\r\n        margin-top: 50px;        \r\n        \r\n    }\r\n\r\n    .nav-item {\r\n        display: inline;\r\n        color: white;\r\n        margin-right: 7vw;\r\n\r\n        text-transform: uppercase;\r\n        letter-spacing: 4px;\r\n        font-size: 20px;        \r\n\r\n        text-decoration: none;\r\n        background-image: linear-gradient(currentColor, currentColor);\r\n        background-position: 50% 100%;\r\n        background-repeat: no-repeat;\r\n        background-size: 0% 2px;\r\n        transition: background-size 0.5s;\r\n    }\r\n\r\n    .nav-item:hover {\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n        background-size: 100% 2px;\r\n    }\r\n\r\n    .nav-items-collapsed{\r\n        display: none;\r\n    }\r\n \r\n\r\n  @media only screen and (max-width: 767px) {\r\n        position: relative;\r\n\r\n        .nav-items{\r\n            display: none;\r\n        }   \r\n\r\n        .menu-mobile{\r\n            height: 100%;\r\n            display: flex;\r\n            margin-left: 10vw;\r\n            margin-top: 25px;\r\n        }\r\n        \r\n        .icono{\r\n            width:40px;\r\n            height:40px;\r\n            position:relative;\r\n        }\r\n\r\n        .nav-items-collapsed {\r\n\r\n            &.is-expanded {\r\n                margin: 0;\r\n                margin-top: 15vh;\r\n                left:0;\r\n                height: 77vh;\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: space-between;\r\n                flex-wrap: wrap;\r\n                text-align: center;\r\n                font-size: 40px;\r\n                animation: moveToLeft 1s;\r\n            }\r\n        }\r\n\r\n        .nav-item{\r\n            font-size: 30px;\r\n            font-weight: bold;\r\n        }\r\n    }\r\n\r\n  @keyframes moveToLeft {\r\n    from {\r\n        transform: translateX(120px);\r\n        opacity: 0;\r\n    }\r\n    to {\r\n        transform: translateX(0);\r\n        opacity: 1;\r\n    }\r\n    }\r\n\r\n    .line {\r\n        position: absolute;\r\n        height: 5px;\r\n        width:100%;\r\n        background:white;\r\n        border-radius:10px;\r\n        transition: all cubic-bezier(0.25, 0.1, 0.28, 1.54) 0.32s;\r\n    }\r\n\r\n    .line01 {\r\n        top:19%;\r\n    }\r\n\r\n    .line02 {\r\n        top:49%;\r\n        left: 40%;\r\n    }\r\n\r\n    .line03 {\r\n        top:79%;\r\n    }\r\n\r\n    .menu.close .line01 {\r\n        transform:rotate(45deg);\r\n        top:49%;\r\n    }\r\n\r\n    .menu.close .line02, .menu.close .line03 {\r\n        transform:rotate(-45deg);\r\n        top:49%;\r\n    }\r\n    .menu.close .line02 {\r\n        opacity: 0;\r\n    }\r\n`;\r\n\r\n\r\nclass Navbar extends Component {\r\n\r\n    render() {\r\n        if (this.props.data) {\r\n            var links_responsive = this.props.data.pages.map(l => {\r\n                return <li className=\"nav-item\">\r\n                    <Link\r\n                        activeClass=\"active\"\r\n                        to={l.link}\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={0}\r\n                        duration={500}\r\n                        onClick={e => this.props.handleToggle(e)}\r\n                    >\r\n                        {l.name}\r\n                    </Link>\r\n                </li>\r\n            });\r\n\r\n            var links = this.props.data.pages.map(l => {\r\n                return <li className=\"nav-item\">\r\n                    <Link\r\n                        activeClass=\"active\"\r\n                        to={l.link}\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={0}\r\n                        duration={500}\r\n                    >\r\n                        {l.name}\r\n                    </Link>\r\n                </li>\r\n            });\r\n        }\r\n\r\n        const isExpanded = this.props.value;\r\n\r\n        return (\r\n            <Navigation>\r\n                <div className=\"menu-mobile\">\r\n                    <div className={`icono ${isExpanded ?\r\n                        \"menu close\" : \"menu\"}`}\r\n                        onClick={e => this.props.handleToggle(e)}>\r\n                        <span class=\"line line01\"></span>\r\n                        <span class=\"line line02\"></span>\r\n                        <span class=\"line line03\"></span>\r\n                    </div>\r\n\r\n\r\n                    <ul className={`nav-items-collapsed ${isExpanded ? \"is-expanded\" : \"\"}`}>{links_responsive}</ul>\r\n                </div>\r\n\r\n                <ul className=\"nav-items\">{links}</ul>\r\n\r\n            </Navigation>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from './Navbar';\r\nimport data from '../data';\r\n\r\nconst description = data.main.description;\r\nconst socialList = data.main.social;\r\nconst dataList = data.main;\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isExpanded: false\r\n        };\r\n    }\r\n\r\n    handleToggle(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            isExpanded: !this.state.isExpanded\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const isExpanded = this.state.isExpanded;\r\n\r\n\r\n        var social = socialList.map(s => {\r\n            return <a href={s.url} target={s.target} rel={s.rel}> {s.name} /</a>\r\n        })\r\n\r\n        return (\r\n            <section id=\"header\">\r\n                <div class=\"header\">\r\n                    {/*<Navbar\r\n                        data={dataList}\r\n                        value={this.state.isExpanded}\r\n                        handleToggle={this.handleToggle.bind(this)}\r\n                    />*/}\r\n\r\n                    <div className={`${isExpanded ? \"welcome-responsive\" : \"welcome\"}`}>\r\n                        <h1>{description}</h1>\r\n                        <div class=\"social-media\">\r\n                            <h2>\r\n                                {social}\r\n                            </h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport Foto from '../images/about_image.jpg';\r\nimport data from '../data';\r\n\r\nconst skillsList = data.skills;\r\nconst about_1 = data.about_1;\r\nconst about_2 = data.about_2;\r\n\r\n\r\nconst description = data.main.description;\r\n\r\nclass About extends Component {\r\n  render() {\r\n\r\n    if (this.props.data) {\r\n      var skills = skillsList.map(s => {\r\n        return <div className=\"column-skills\">\r\n          <h3>{s.title}</h3>\r\n          <p>{s.name_1}</p>\r\n          <p>{s.name_2}</p>\r\n          <p>{s.name_3}</p>\r\n        </div>\r\n      })\r\n      /*var experience = this.props.data.experience.map(s=> {\r\n        return <div className=\"column-skills\">\r\n          <h3>{s.enterprise}</h3>\r\n          <p>{s.comment_1}</p>\r\n          <p>{s.comment_2}</p>\r\n          <p>{s.comment_3}</p>\r\n        </div>\r\n      })*/\r\n    }\r\n\r\n    return (\r\n      <section id=\"about\">\r\n\r\n\r\n        <div className=\"about-content\">\r\n          <div className=\"about-row\">\r\n            <div className=\"about-col-left\">\r\n              <h1 className=\"title\">About me</h1>\r\n              <div className=\"about-description\">\r\n                <p>{about_1}</p>\r\n                <p>{about_2}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"about-col-right\">\r\n              <img className=\"about-foto\" src={Foto} alt=\"Gonzalo Gallego\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"skills-content\">\r\n            <h2>Skillssssssssss</h2>\r\n            <h2>{description}</h2>\r\n            <div class=\"row\">\r\n              <div className=\"skills-lane\" />\r\n              {skills}\r\n              <h2>Hola</h2>\r\n            </div>\r\n          </div>\r\n\r\n          {/*<div className=\"skills-content\">\r\n            <h2>Experience</h2>\r\n            <div class=\"row\">\r\n              <div className=\"skills-lane\" />\r\n              {experience}\r\n            </div>\r\n          </div>*/}\r\n\r\n        </div>\r\n\r\n\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        return (\r\n            <section id=\"projects\">\r\n                <div className=\"projects-content\">\r\n                    <h1>Projects</h1>\r\n                    <div className=\"projects-container\">\r\n                        <div className=\"loading\">Coming soon</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\n\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n\r\n        if (this.props.data) {\r\n            var email = this.props.data.email;\r\n            var mailto = \"mailto:\";\r\n            var mailtoEmail = mailto.concat(email);\r\n            var social = this.props.data.social.map(s => {\r\n                return <h2><a href={s.url} target={s.target} rel={s.rel}>{s.name}</a></h2>\r\n            })\r\n        }\r\n\r\n        return (\r\n            <section id=\"contact\">\r\n                <div className=\"contact-content\">\r\n                    <div className=\"contact-col-left\">\r\n                        <h2 className=\"contact-title\">Contact me</h2>\r\n                        <h1 className=\"contact-phrase\">Have an idea or a concept that really excite you? Let's turn that idea into reality. Let me know it</h1>\r\n\r\n                        <a href={mailtoEmail} className=\"contact-email\">\r\n                            <div className=\"contact-button\">\r\n                                Let's talk\r\n                            </div>\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div className=\"contact-col-right\">\r\n                        <div className=\"contact-social\">\r\n                            <h1>Email</h1>\r\n                            <h2>gonzalo_gallego@outlook.com</h2>\r\n                            <br></br>\r\n                            <h1>Social</h1>\r\n                            {social}\r\n                        </div>                        \r\n                    </div>        \r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\nimport ReactGA from 'react-ga';\nimport $ from 'jquery';\nimport \"./App.css\";\nimport Header from './components/Header';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Projects from './components/Projects';\nimport ButtonLink from './components/ButtonLink';\nimport resumeData from './data';\n\nconst description = resumeData.main.description;\n\nclass App extends Component {\n\n /* constructor(props) {\n    super(props);\n    this.state = {\n      foo: 'bar',\n      resumeData: {}\n    };\n\n    ReactGA.initialize('UA-110570651-1');\n    ReactGA.pageview(window.location.pathname);\n\n  }\n\n  getResumeData() {\n    $.ajax({\n      url: '/resumeData.json',\n      dataType: 'json',\n      cache: false,\n      success: function (data) {\n        this.setState({ resumeData: data });\n      }.bind(this),\n      error: function (xhr, status, err) {\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getResumeData();\n  }*/\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/*<Header data={this.state.resumeData.main} />\n        <ButtonLink />*/}\n        <About/* data={this.state.resumeData.main} *//>\n        <Projects />\n\n        {/* <Section\n          title=\"Projects\"\n          subtitle={dummyText}\n          dark={true}\n          id=\"projects\"\n        />\n        <Contact data={this.state.resumeData.main} />*/}\n        <div className=\"footer\">\n          <h3>Designed by\n          <a href=\"https://www.linkedin.com/in/gonzalo-gallego-cardo-754655151/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"> me\n              </a>\n          </h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-scroll';\r\n\r\nclass ButtonLink extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"button-link\">\r\n                <Link\r\n                    activeClass=\"active\"\r\n                    to=\"header\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={-150}\r\n                    duration={500}\r\n                >\r\n                    <div class=\"container\">\r\n                        <div class=\"bg\"></div>\r\n                        <div class=\"button\">\r\n                            <i class=\"fa fa-chevron-up\" aria-hidden=\"true\"></i>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ButtonLink;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}